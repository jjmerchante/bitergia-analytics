name: Bitergia Analytics release

on:
  workflow_dispatch:
    inputs:
      release_candidate:
        description: "Create a release candidate version"
        required: true
        type: boolean
        default: false
      git_email:
        description: "Git email for commits messages"
        required: true
        default: "sduenas@bitergia.com"
      git_name:
        description: "Git name for commits messages"
        required: true
        default: "Santiago DueÃ±as"

jobs:
  variables-job:
    name: Set variables
    runs-on: ubuntu-latest
    outputs:
      git_email: ${{ steps.variables.outputs.git_email }}
      git_name: ${{ steps.variables.outputs.git_name }}
      release_candidate: ${{ steps.variables.outputs.release_candidate }}
    steps:
      - id: variables
        name: variables
        run: |
          echo "git_email=${{ inputs.git_email }}" >> $GITHUB_OUTPUT
          echo "git_name=${{ inputs.git_name}}" >> $GITHUB_OUTPUT
          echo "release_candidate=${{ inputs.release_candidate}}" >> $GITHUB_OUTPUT

  setup:
    name: Get version from each repository
    runs-on: ubuntu-latest
    environment: bap-release
    needs:
      - variables-job
    strategy:
      matrix:
        repository: [
          bitergia-analytics,
          bitergia-analytics-opensearch,
          bitergia-analytics-opensearch-dashboards,
          bitergia-analytics-plugin,
          dotplot-vis-plugin,
          network-vis-plugin,
          polar-vis-plugin,
          radar-vis-plugin
        ]
    outputs:
      bitergia_analytics_version: ${{ steps.semverup.outputs.bitergia-analytics }}
      bitergia_analytics_forced_version: ${{ steps.semverup.outputs.bitergia-analytics_forced_version }}
      opensearch_version: ${{ steps.semverup.outputs.bitergia-analytics-opensearch }}
      opensearch_forced_version: ${{ steps.semverup.outputs.bitergia-analytics-opensearch_forced_version }}
      dashboards_version: ${{ steps.semverup.outputs.bitergia-analytics-opensearch-dashboards }}
      dashboards_forced_version: ${{ steps.semverup.outputs.bitergia-analytics-opensearch-dashboards_forced_version }}
      plugin_version: ${{ steps.semverup.outputs.bitergia-analytics-plugin }}
      plugin_forced_version: ${{ steps.semverup.outputs.bitergia-analytics-plugin_forced_version }}
      dotplot_version: ${{ steps.semverup.outputs.dotplot-vis-plugin }}
      dotplot_forced_version: ${{ steps.semverup.outputs.dotplot-vis-plugin_forced_version }}
      network_version: ${{ steps.semverup.outputs.network-vis-plugin }}
      network_forced_version: ${{ steps.semverup.outputs.network-vis-plugin_forced_version }}
      polar_version: ${{ steps.semverup.outputs.polar-vis-plugin }}
      polar_forced_version: ${{ steps.semverup.outputs.polar-vis-plugin_forced_version }}
      radar_version: ${{ steps.semverup.outputs.radar-vis-plugin }}
      radar_forced_version: ${{ steps.semverup.outputs.radar-vis-plugin_forced_version }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          repository: jjmerchante/${{ matrix.repository }}
          path: ${{ matrix.repository }}
          token: '${{ secrets.BAP_BUILD_TOKEN }}'
          fetch-depth: 0

      - name: Install release-tools
        run: pip install git+https://github.com/Bitergia/release-tools.git#egg=release-tools
      
      - id: old-version
        name: Get old version
        run: |
          if [ ${{ contains(matrix.repository, 'plugin') }} == 'true' ]
          then
            version=$(jq '.version' package.json)
          else
            version=$(<version)
          fi
          echo "version=$version" >> $GITHUB_OUTPUT
        working-directory: ${{ matrix.repository }}

      - id: semverup
        name: Get version number
        continue-on-error: true
        shell: bash {0}
        run: |
          old_version=${{ steps.old-version.outputs.version }}
          if [ ${{ inputs.release_candidate }} == 'true' ]
          then
            rcArg='--pre-release'
          else
            rcArg=''
          fi

          version=$(semverup --dry-run --current-version $old_version $rcArg)
          if [ -z $version ] && [ ${{ inputs.release_candidate }} != 'true' ] && [[ "$old_version" =~ .*rc.* ]]
          then
            echo "Create final version from rc"
            version=$(semverup --dry-run --current-version $old_version --bump-version patch)
            forced_version=true
          else
            forced_version=false
          fi

          echo $version
          echo "${{ matrix.repository }}=$version" >> $GITHUB_OUTPUT

          if [ -z $version ] || [ $forced_version == true ]
          then
            echo "${{ matrix.repository }}_forced_version=true" >> $GITHUB_OUTPUT
          else
            echo "${{ matrix.repository }}_forced_version=false" >> $GITHUB_OUTPUT
          fi
        working-directory: ${{ matrix.repository }}
   
  semverup:
    name: Choose highest version number
    runs-on: ubuntu-latest
    environment: bap-release
    needs:
      - setup
    outputs:
      version: ${{ steps.version.outputs.new_version }}
    steps:
      - name: Choose version number
        id: choose_version
        run: |
          versions=(
            ${{ needs.setup.outputs.bitergia_analytics_version }}
            ${{ needs.setup.outputs.plugin_version }}
            ${{ needs.setup.outputs.dotplot_version }}
            ${{ needs.setup.outputs.network_version }}
            ${{ needs.setup.outputs.polar_version }}
            ${{ needs.setup.outputs.radar_version }}
            ${{ needs.setup.outputs.opensearch_version }}
            ${{ needs.setup.outputs.dashboards_version }}
          )
          IFS=$'\n' new_version=($(sort -r -V <<<"${versions[*]}" | head -n1)); unset IFS
          echo "new_version=$new_version" >> $GITHUB_OUTPUT
          echo $new_version

      - name: Checkout main repository to force new version
        if: steps.choose_version.outputs.new_version == ''
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          repository: jjmerchante/bitergia-analytics
          token: '${{ secrets.BAP_BUILD_TOKEN }}'
          fetch-depth: 0

      - name: Install release-tools
        if: steps.choose_version.outputs.new_version == ''
        run: pip install git+https://github.com/Bitergia/release-tools.git#egg=release-tools

      - name: Force new version from main repository
        if: steps.choose_version.outputs.new_version == ''
        id: version_main
        run: |
          if [ ${{ inputs.release_candidate }} == 'true' ]
          then
            rcArg='--pre-release'
          else
            rcArg=''
          fi
          old_version=$(<version)
          new_version=$(semverup --dry-run --current-version $old_version --bump-version=patch $rcArg)
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: Set new version
        id: version
        run: |
          if [ "${{ steps.choose_version.outputs.new_version }}" != '' ]
          then
            echo "new_version=${{ steps.choose_version.outputs.new_version }}" >> $GITHUB_OUTPUT
            echo ${{ steps.choose_version.outputs.new_version }}
          else
            echo "new_version=${{ steps.version_main.outputs.new_version }}" >> $GITHUB_OUTPUT
            echo ${{ steps.version_main.outputs.new_version }}
          fi
